%%writefile image_01.py

import streamlit as st
import tensorflow as tf
from PIL import Image, ImageOps
import numpy as np
from tensorflow.keras.applications.imagenet_utils import decode_predictions

resnet50_pre = tf.keras.applications.resnet.ResNet50(weights='imagenet', input_shape=(224,224,3))

st.title('이미지 분류 실습 웹페이지')        
# 파일을 업로드할수 있는 영역 생성
file = st.file_uploader('이미지를 선택해 주세요.', type=['jpg','png'])

if file is None:
  st.text('이미지를 먼저 선택해 주세요.')
else:
  image = Image.open(file)
  st.image(image, use_column_width=True)
  img_resized = ImageOps.fit(image, (224,224), Image.ANTIALIAS)    #ImageOps함수를 통해 이미지 사이즈 변경
  img_resized = img_resized.convert('RGB')  #image load시 4개의 채널로 되어 있음. 인공지능이 인식할수 있는 3개의 채널로 변경
  img_resized = np.asarray(img_resized)  #인공지능이 원하는형식으로의 변환을 위해 np array로 변환

  pred = resnet50_pre.predict(img_resized.reshape([1,224,224,3]))  #이미지 한개, 사이즈, 채널=> 예측
  decoded_pred = decode_predictions(pred)   #예측 결과를 이미지와 맵핑
  results = ''
  for i, instance in enumerate(decoded_pred[0]):
    results += '{}위: {}  ({:.2f}%) '.format(i+1, instance[1], instance[2] * 100)
  st.success(results)