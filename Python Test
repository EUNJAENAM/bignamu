# 조건처리

if condition:
    print("change>3000")
else:
    print("change<=3000")

------------------------------------------------------------------------------------------   
DEBUG = False

a=10
b=15

if DEBUG:
    print("a={}, b={}".format(a,b))
------------------------------------------------------------------------------------------    
#엑셀파일 로드 Version Up
!pip install xlrd==1.2.0

# 한글지원
!sudo apt-get install -y fonts-nanum
!sudo fc-cache -fv
!rm ~/.cache/matplotlib –rf
------------------------------------------------------------------------------------------
# tuple은 초기화 할 때, 처음 값을 넣을 때 확실히!!
# tuple은 append가 안 된다. 왜? 읽기 전용
mytuple = (1, 2, 3, 4, 5)      #튜플 타입
mytuple.append(1)
------------------------------------------------------------------------------------------
# count메서드를 tuple데이터에 적용
testTuple = (10,20,10,30,20)
testTuple.count(10)
------------------------------------------------------------------------------------------
# 집합형/ 중복데이터 안들어감
myset = set()
# set(집합)에서는 요소 추가를 add()
myset.add(1)
myset.add(2)
myset.add(3)

또다른 방법
s1 = set([1,2,3])
s1.add(4)            #추가
s1.update([5,6,7])    #업데이트 추가
s1.remove(3)        #삭제
-----------------------------------------------------------------------------------------
mydict = dict()
mydict['apple'] = 123456
# dict에 index형태로 저장시 index값이 key, data값이 value
mydict[0] = 2
mydict[0]
-----------------------------------------------------------------------------
# 함수
def test2(a,b,c):
    print("{}+{}={}".format(a,b,c))

test2(1,2,3)

----------------------------------------------------------
def calc(a, b, c):
    return (a + b) * c
-----------------------------------------------------------
#lambda
add = lambda a, b: a+b

----------------------------------------------------------------------------------------

#조건
# 아래에 실습코드를 작성하고 결과를 확인합니다.
jogun = df_total[df_total['PerHour'] > 130].index
df_total.drop(jogun, inplace=True)
df_total

#반복문
mylist = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

for abc in mylist:
    print(abc)

# %연산자 
for i in mylist:
    # 나머지가 0이되면, print()함수를 실행
    if i % 2 == 0:
        print(i)
    ##################

# continue를 실행하면 실행순서를 아래로 내려가지 않고 for문으로 올라가버린다.
for i in mylist:
    # your code here #
    if i % 2 == 1:
        continue
    print(i)

for i in mylist:
    if i >= 6:
        print('break')
        break          #빠져나오기
    print(i)      
------------------------------------------------------------------------------
#mylist = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
mylist = []

for i in range(1,11):
    mylist.append(i)
print(mylist)
for i in mylist:                     # 짝수이면 if는 참이다.
    if i % 2 == 0:
        print(i)

------------------------------------------------------------------------
mylist = [i for i in range(1,11) if i%2==0]      #1~10사이의 숫자중 짝수만
mylist
even = [i for i in mylist if i % 2 == 0]
even = [i+2 for i in mylist]                    #모든값에 +2

-Text 쪼개기------------------------------------------------------------------
a = 'This is a pen’
# a 문자열을 공백(' ')을 기준으로 나눈다.
# 문자열을 나눌때는 split()메서드를 자주 사용한다.
temp = a.split(' ')
print(temp)
type(temp)

------------------------------------------------------------------------
a = '01-sample.png’
a.replace(‘.png’,‘.jpg’)

a.strip()     #공백제거
